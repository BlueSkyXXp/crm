##定义初始变量
#set($tableName = $tool.append($tableInfo.name, "Controller"))
#set($tableApi = $tableInfo.comment.replaceAll("表",""))
#set($tableLastSegment = $tool.hump2Underline($tableInfo.name).split("_")[-1].toLowerCase())

##设置回调
$!callback.setFileName($tool.append($tableName, ".java"))
$!callback.setSavePath($tool.append($tableInfo.savePath, "/controller"))
##拿到主键
#if(!$tableInfo.pkColumn.isEmpty())
    #set($pk = $tableInfo.pkColumn.get(0))
#end

#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.stone.common.annotation.Log;
import com.stone.common.core.controller.BaseController;
import com.stone.common.core.domain.AjaxResult;
import com.stone.common.enums.BusinessType;
import $!{tableInfo.savePackageName}.domain.$!{tableInfo.name};
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import com.stone.common.utils.poi.ExcelUtil;
import com.stone.common.core.page.TableDataInfo;

/**
 * $!{tableInfo.comment}($!{tableInfo.name})表控制层
 *
 * @author $!author
 * @data $!time.currTime()
 */
@Api(value = "$!{tableApi}管理", tags = {"$!{tableApi}管理"})
@RestController
@RequestMapping("/crm/$!{tableLastSegment}")
public class $!{tableName} extends BaseController {
/**
 * 服务对象
 */
@Autowired
private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;


/**
 * 查询$!{tableApi}列表
 */
@ApiOperation("查询$!{tableApi}列表")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:list')")
@GetMapping("/list")
public TableDataInfo list($!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)})
        {
        startPage();
        List<$!{tableInfo.name}> list = $!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}List($!{tool.firstLowerCase($tableInfo.name)});
        return getDataTable(list);
        }

/**
 * 导出$!{tableApi}列表
 */
@ApiOperation("导出$!{tableApi}列表")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:export')")
@Log(title = "$!{tableApi}", businessType = BusinessType.EXPORT)
@PostMapping("/export")
public void export(HttpServletResponse response, $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)})
        {
        List<$!{tableInfo.name}> list = $!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}List($!{tool.firstLowerCase($tableInfo.name)});
        ExcelUtil<$!{tableInfo.name}> util = new ExcelUtil<$!{tableInfo.name}>($!{tableInfo.name}.class);
        util.exportExcel(response, list, "$!{tableApi}数据");
        }

/**
 * 获取$!{tableApi}详细信息
 */
@ApiOperation("获取$!{tableApi}详细信息")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:query')")
@GetMapping(value = "/{$!{tableLastSegment}Id}")
public AjaxResult getInfo(@PathVariable("$!{tableLastSegment}Id") String id)
        {
        return success($!{tool.firstLowerCase($tableInfo.name)}Service.select$!{tableInfo.name}ById(id));
        }

/**
 * 新增$!{tableApi}
 */
@ApiOperation("新增$!{tableApi}")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:add')")
@Log(title = "$!{tableApi}", businessType = BusinessType.INSERT)
@PostMapping
public AjaxResult add(@RequestBody $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)})
        {
        return toAjax($!{tool.firstLowerCase($tableInfo.name)}Service.insert$!{tableInfo.name}($!{tool.firstLowerCase($tableInfo.name)}));
        }

/**
 * 修改$!{tableApi}
 */
@ApiOperation("修改$!{tableApi}")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:edit')")
@Log(title = "$!{tableApi}", businessType = BusinessType.UPDATE)
@PutMapping
public AjaxResult edit(@RequestBody $!{tableInfo.name} $!{tool.firstLowerCase($tableInfo.name)})
        {
        return toAjax($!{tool.firstLowerCase($tableInfo.name)}Service.update$!{tableInfo.name}($!{tool.firstLowerCase($tableInfo.name)}));
        }

/**
 * 删除$!{tableApi}
 */
@ApiOperation("删除$!{tableApi}")
@PreAuthorize("@ss.hasPermi('crm:$!{tableLastSegment}:remove')")
@Log(title = "$!{tableApi}", businessType = BusinessType.DELETE)
@DeleteMapping("/{$!{tableLastSegment}Ids}")
public AjaxResult remove(@PathVariable String[] $!{tableLastSegment}Ids)
        {
        return toAjax($!{tool.firstLowerCase($tableInfo.name)}Service.delete$!{tableInfo.name}ByIds($!{tableLastSegment}Ids));
        }

        }
